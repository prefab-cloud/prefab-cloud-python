"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ConfigType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ConfigTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConfigType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOT_SET_CONFIG_TYPE: _ConfigType.ValueType  # 0
    """proto null"""
    CONFIG: _ConfigType.ValueType  # 1
    FEATURE_FLAG: _ConfigType.ValueType  # 2
    LOG_LEVEL: _ConfigType.ValueType  # 3
    SEGMENT: _ConfigType.ValueType  # 4
    LIMIT_DEFINITION: _ConfigType.ValueType  # 5

class ConfigType(_ConfigType, metaclass=_ConfigTypeEnumTypeWrapper): ...

NOT_SET_CONFIG_TYPE: ConfigType.ValueType  # 0
"""proto null"""
CONFIG: ConfigType.ValueType  # 1
FEATURE_FLAG: ConfigType.ValueType  # 2
LOG_LEVEL: ConfigType.ValueType  # 3
SEGMENT: ConfigType.ValueType  # 4
LIMIT_DEFINITION: ConfigType.ValueType  # 5
global___ConfigType = ConfigType

class _LogLevel:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _LogLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogLevel.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOT_SET_LOG_LEVEL: _LogLevel.ValueType  # 0
    TRACE: _LogLevel.ValueType  # 1
    DEBUG: _LogLevel.ValueType  # 2
    INFO: _LogLevel.ValueType  # 3
    WARN: _LogLevel.ValueType  # 5
    """NOTICE = 4;"""
    ERROR: _LogLevel.ValueType  # 6
    FATAL: _LogLevel.ValueType  # 9
    """CRITICAL = 7;
    ALERT = 8;
    """

class LogLevel(_LogLevel, metaclass=_LogLevelEnumTypeWrapper): ...

NOT_SET_LOG_LEVEL: LogLevel.ValueType  # 0
TRACE: LogLevel.ValueType  # 1
DEBUG: LogLevel.ValueType  # 2
INFO: LogLevel.ValueType  # 3
WARN: LogLevel.ValueType  # 5
"""NOTICE = 4;"""
ERROR: LogLevel.ValueType  # 6
FATAL: LogLevel.ValueType  # 9
"""CRITICAL = 7;
ALERT = 8;
"""
global___LogLevel = LogLevel

class _OnFailure:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OnFailureEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OnFailure.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOT_SET: _OnFailure.ValueType  # 0
    LOG_AND_PASS: _OnFailure.ValueType  # 1
    LOG_AND_FAIL: _OnFailure.ValueType  # 2
    THROW: _OnFailure.ValueType  # 3

class OnFailure(_OnFailure, metaclass=_OnFailureEnumTypeWrapper): ...

NOT_SET: OnFailure.ValueType  # 0
LOG_AND_PASS: OnFailure.ValueType  # 1
LOG_AND_FAIL: OnFailure.ValueType  # 2
THROW: OnFailure.ValueType  # 3
global___OnFailure = OnFailure

@typing_extensions.final
class ConfigServicePointer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    START_AT_ID_FIELD_NUMBER: builtins.int
    PROJECT_ENV_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.int
    start_at_id: builtins.int
    project_env_id: builtins.int
    def __init__(
        self,
        *,
        project_id: builtins.int = ...,
        start_at_id: builtins.int = ...,
        project_env_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_env_id", b"project_env_id", "project_id", b"project_id", "start_at_id", b"start_at_id"]) -> None: ...

global___ConfigServicePointer = ConfigServicePointer

@typing_extensions.final
class ConfigValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INT_FIELD_NUMBER: builtins.int
    STRING_FIELD_NUMBER: builtins.int
    BYTES_FIELD_NUMBER: builtins.int
    DOUBLE_FIELD_NUMBER: builtins.int
    BOOL_FIELD_NUMBER: builtins.int
    WEIGHTED_VALUES_FIELD_NUMBER: builtins.int
    LIMIT_DEFINITION_FIELD_NUMBER: builtins.int
    LOG_LEVEL_FIELD_NUMBER: builtins.int
    STRING_LIST_FIELD_NUMBER: builtins.int
    INT_RANGE_FIELD_NUMBER: builtins.int
    int: builtins.int
    string: builtins.str
    bytes: builtins.bytes
    double: builtins.float
    bool: builtins.bool
    @property
    def weighted_values(self) -> global___WeightedValues: ...
    @property
    def limit_definition(self) -> global___LimitDefinition: ...
    log_level: global___LogLevel.ValueType
    @property
    def string_list(self) -> global___StringList: ...
    @property
    def int_range(self) -> global___IntRange: ...
    def __init__(
        self,
        *,
        int: builtins.int = ...,
        string: builtins.str = ...,
        bytes: builtins.bytes = ...,
        double: builtins.float = ...,
        bool: builtins.bool = ...,
        weighted_values: global___WeightedValues | None = ...,
        limit_definition: global___LimitDefinition | None = ...,
        log_level: global___LogLevel.ValueType = ...,
        string_list: global___StringList | None = ...,
        int_range: global___IntRange | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bool", b"bool", "bytes", b"bytes", "double", b"double", "int", b"int", "int_range", b"int_range", "limit_definition", b"limit_definition", "log_level", b"log_level", "string", b"string", "string_list", b"string_list", "type", b"type", "weighted_values", b"weighted_values"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bool", b"bool", "bytes", b"bytes", "double", b"double", "int", b"int", "int_range", b"int_range", "limit_definition", b"limit_definition", "log_level", b"log_level", "string", b"string", "string_list", b"string_list", "type", b"type", "weighted_values", b"weighted_values"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["int", "string", "bytes", "double", "bool", "weighted_values", "limit_definition", "log_level", "string_list", "int_range"] | None: ...

global___ConfigValue = ConfigValue

@typing_extensions.final
class IntRange(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    start: builtins.int
    """if empty treat as Long.MIN_VALUE. Inclusive"""
    end: builtins.int
    """if empty treat as Long.MAX_VALUE. Exclusive"""
    def __init__(
        self,
        *,
        start: builtins.int | None = ...,
        end: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_end", b"_end", "_start", b"_start", "end", b"end", "start", b"start"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_end", b"_end", "_start", b"_start", "end", b"end", "start", b"start"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end", b"_end"]) -> typing_extensions.Literal["end"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start", b"_start"]) -> typing_extensions.Literal["start"] | None: ...

global___IntRange = IntRange

@typing_extensions.final
class StringList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values", b"values"]) -> None: ...

global___StringList = StringList

@typing_extensions.final
class WeightedValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WEIGHT_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    weight: builtins.int
    """out of 1000"""
    @property
    def value(self) -> global___ConfigValue: ...
    def __init__(
        self,
        *,
        weight: builtins.int = ...,
        value: global___ConfigValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value", b"value", "weight", b"weight"]) -> None: ...

global___WeightedValue = WeightedValue

@typing_extensions.final
class WeightedValues(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WEIGHTED_VALUES_FIELD_NUMBER: builtins.int
    HASH_BY_PROPERTY_NAME_FIELD_NUMBER: builtins.int
    @property
    def weighted_values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WeightedValue]: ...
    hash_by_property_name: builtins.str
    def __init__(
        self,
        *,
        weighted_values: collections.abc.Iterable[global___WeightedValue] | None = ...,
        hash_by_property_name: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_hash_by_property_name", b"_hash_by_property_name", "hash_by_property_name", b"hash_by_property_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_hash_by_property_name", b"_hash_by_property_name", "hash_by_property_name", b"hash_by_property_name", "weighted_values", b"weighted_values"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hash_by_property_name", b"_hash_by_property_name"]) -> typing_extensions.Literal["hash_by_property_name"] | None: ...

global___WeightedValues = WeightedValues

@typing_extensions.final
class Configs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIGS_FIELD_NUMBER: builtins.int
    CONFIG_SERVICE_POINTER_FIELD_NUMBER: builtins.int
    @property
    def configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Config]: ...
    @property
    def config_service_pointer(self) -> global___ConfigServicePointer: ...
    def __init__(
        self,
        *,
        configs: collections.abc.Iterable[global___Config] | None = ...,
        config_service_pointer: global___ConfigServicePointer | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config_service_pointer", b"config_service_pointer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_service_pointer", b"config_service_pointer", "configs", b"configs"]) -> None: ...

global___Configs = Configs

@typing_extensions.final
class Config(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    CHANGED_BY_FIELD_NUMBER: builtins.int
    ROWS_FIELD_NUMBER: builtins.int
    ALLOWABLE_VALUES_FIELD_NUMBER: builtins.int
    CONFIG_TYPE_FIELD_NUMBER: builtins.int
    DRAFTID_FIELD_NUMBER: builtins.int
    id: builtins.int
    project_id: builtins.int
    key: builtins.str
    @property
    def changed_by(self) -> global___ChangedBy: ...
    @property
    def rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ConfigRow]: ...
    @property
    def allowable_values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ConfigValue]: ...
    config_type: global___ConfigType.ValueType
    draftId: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        project_id: builtins.int = ...,
        key: builtins.str = ...,
        changed_by: global___ChangedBy | None = ...,
        rows: collections.abc.Iterable[global___ConfigRow] | None = ...,
        allowable_values: collections.abc.Iterable[global___ConfigValue] | None = ...,
        config_type: global___ConfigType.ValueType = ...,
        draftId: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_draftId", b"_draftId", "changed_by", b"changed_by", "draftId", b"draftId"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_draftId", b"_draftId", "allowable_values", b"allowable_values", "changed_by", b"changed_by", "config_type", b"config_type", "draftId", b"draftId", "id", b"id", "key", b"key", "project_id", b"project_id", "rows", b"rows"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_draftId", b"_draftId"]) -> typing_extensions.Literal["draftId"] | None: ...

global___Config = Config

@typing_extensions.final
class ChangedBy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    user_id: builtins.int
    email: builtins.str
    def __init__(
        self,
        *,
        user_id: builtins.int = ...,
        email: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["email", b"email", "user_id", b"user_id"]) -> None: ...

global___ChangedBy = ChangedBy

@typing_extensions.final
class ConfigRow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class PropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ConfigValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ConfigValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    PROJECT_ENV_ID_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    project_env_id: builtins.int
    """one row per project_env_id"""
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ConditionalValue]: ...
    @property
    def properties(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ConfigValue]:
        """can store "activated" """
    def __init__(
        self,
        *,
        project_env_id: builtins.int | None = ...,
        values: collections.abc.Iterable[global___ConditionalValue] | None = ...,
        properties: collections.abc.Mapping[builtins.str, global___ConfigValue] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_project_env_id", b"_project_env_id", "project_env_id", b"project_env_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_project_env_id", b"_project_env_id", "project_env_id", b"project_env_id", "properties", b"properties", "values", b"values"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_project_env_id", b"_project_env_id"]) -> typing_extensions.Literal["project_env_id"] | None: ...

global___ConfigRow = ConfigRow

@typing_extensions.final
class ConditionalValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CRITERIA_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def criteria(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Criterion]:
        """if all criteria match, then the rule is matched and value is returned"""
    @property
    def value(self) -> global___ConfigValue: ...
    def __init__(
        self,
        *,
        criteria: collections.abc.Iterable[global___Criterion] | None = ...,
        value: global___ConfigValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["criteria", b"criteria", "value", b"value"]) -> None: ...

global___ConditionalValue = ConditionalValue

@typing_extensions.final
class Criterion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _CriterionOperator:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CriterionOperatorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Criterion._CriterionOperator.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NOT_SET: Criterion._CriterionOperator.ValueType  # 0
        """proto null"""
        LOOKUP_KEY_IN: Criterion._CriterionOperator.ValueType  # 1
        LOOKUP_KEY_NOT_IN: Criterion._CriterionOperator.ValueType  # 2
        IN_SEG: Criterion._CriterionOperator.ValueType  # 3
        NOT_IN_SEG: Criterion._CriterionOperator.ValueType  # 4
        ALWAYS_TRUE: Criterion._CriterionOperator.ValueType  # 5
        PROP_IS_ONE_OF: Criterion._CriterionOperator.ValueType  # 6
        PROP_IS_NOT_ONE_OF: Criterion._CriterionOperator.ValueType  # 7
        PROP_ENDS_WITH_ONE_OF: Criterion._CriterionOperator.ValueType  # 8
        PROP_DOES_NOT_END_WITH_ONE_OF: Criterion._CriterionOperator.ValueType  # 9
        HIERARCHICAL_MATCH: Criterion._CriterionOperator.ValueType  # 10
        IN_INT_RANGE: Criterion._CriterionOperator.ValueType  # 11

    class CriterionOperator(_CriterionOperator, metaclass=_CriterionOperatorEnumTypeWrapper): ...
    NOT_SET: Criterion.CriterionOperator.ValueType  # 0
    """proto null"""
    LOOKUP_KEY_IN: Criterion.CriterionOperator.ValueType  # 1
    LOOKUP_KEY_NOT_IN: Criterion.CriterionOperator.ValueType  # 2
    IN_SEG: Criterion.CriterionOperator.ValueType  # 3
    NOT_IN_SEG: Criterion.CriterionOperator.ValueType  # 4
    ALWAYS_TRUE: Criterion.CriterionOperator.ValueType  # 5
    PROP_IS_ONE_OF: Criterion.CriterionOperator.ValueType  # 6
    PROP_IS_NOT_ONE_OF: Criterion.CriterionOperator.ValueType  # 7
    PROP_ENDS_WITH_ONE_OF: Criterion.CriterionOperator.ValueType  # 8
    PROP_DOES_NOT_END_WITH_ONE_OF: Criterion.CriterionOperator.ValueType  # 9
    HIERARCHICAL_MATCH: Criterion.CriterionOperator.ValueType  # 10
    IN_INT_RANGE: Criterion.CriterionOperator.ValueType  # 11

    PROPERTY_NAME_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    VALUE_TO_MATCH_FIELD_NUMBER: builtins.int
    property_name: builtins.str
    operator: global___Criterion.CriterionOperator.ValueType
    @property
    def value_to_match(self) -> global___ConfigValue: ...
    def __init__(
        self,
        *,
        property_name: builtins.str = ...,
        operator: global___Criterion.CriterionOperator.ValueType = ...,
        value_to_match: global___ConfigValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value_to_match", b"value_to_match"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["operator", b"operator", "property_name", b"property_name", "value_to_match", b"value_to_match"]) -> None: ...

global___Criterion = Criterion

@typing_extensions.final
class Loggers(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOGGERS_FIELD_NUMBER: builtins.int
    START_AT_FIELD_NUMBER: builtins.int
    END_AT_FIELD_NUMBER: builtins.int
    INSTANCE_HASH_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    @property
    def loggers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Logger]: ...
    start_at: builtins.int
    end_at: builtins.int
    instance_hash: builtins.str
    """random UUID generated on startup - represents the server so we can aggregate"""
    namespace: builtins.str
    def __init__(
        self,
        *,
        loggers: collections.abc.Iterable[global___Logger] | None = ...,
        start_at: builtins.int = ...,
        end_at: builtins.int = ...,
        instance_hash: builtins.str = ...,
        namespace: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_namespace", b"_namespace", "namespace", b"namespace"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_namespace", b"_namespace", "end_at", b"end_at", "instance_hash", b"instance_hash", "loggers", b"loggers", "namespace", b"namespace", "start_at", b"start_at"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_namespace", b"_namespace"]) -> typing_extensions.Literal["namespace"] | None: ...

global___Loggers = Loggers

@typing_extensions.final
class Logger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOGGER_NAME_FIELD_NUMBER: builtins.int
    TRACES_FIELD_NUMBER: builtins.int
    DEBUGS_FIELD_NUMBER: builtins.int
    INFOS_FIELD_NUMBER: builtins.int
    WARNS_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    FATALS_FIELD_NUMBER: builtins.int
    logger_name: builtins.str
    traces: builtins.int
    debugs: builtins.int
    infos: builtins.int
    warns: builtins.int
    errors: builtins.int
    fatals: builtins.int
    def __init__(
        self,
        *,
        logger_name: builtins.str = ...,
        traces: builtins.int | None = ...,
        debugs: builtins.int | None = ...,
        infos: builtins.int | None = ...,
        warns: builtins.int | None = ...,
        errors: builtins.int | None = ...,
        fatals: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_debugs", b"_debugs", "_errors", b"_errors", "_fatals", b"_fatals", "_infos", b"_infos", "_traces", b"_traces", "_warns", b"_warns", "debugs", b"debugs", "errors", b"errors", "fatals", b"fatals", "infos", b"infos", "traces", b"traces", "warns", b"warns"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_debugs", b"_debugs", "_errors", b"_errors", "_fatals", b"_fatals", "_infos", b"_infos", "_traces", b"_traces", "_warns", b"_warns", "debugs", b"debugs", "errors", b"errors", "fatals", b"fatals", "infos", b"infos", "logger_name", b"logger_name", "traces", b"traces", "warns", b"warns"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_debugs", b"_debugs"]) -> typing_extensions.Literal["debugs"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_errors", b"_errors"]) -> typing_extensions.Literal["errors"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fatals", b"_fatals"]) -> typing_extensions.Literal["fatals"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_infos", b"_infos"]) -> typing_extensions.Literal["infos"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_traces", b"_traces"]) -> typing_extensions.Literal["traces"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warns", b"_warns"]) -> typing_extensions.Literal["warns"] | None: ...

global___Logger = Logger

@typing_extensions.final
class LoggerReportResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___LoggerReportResponse = LoggerReportResponse

@typing_extensions.final
class LimitResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _LimitPolicyNames:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _LimitPolicyNamesEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LimitResponse._LimitPolicyNames.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NOT_SET: LimitResponse._LimitPolicyNames.ValueType  # 0
        SECONDLY_ROLLING: LimitResponse._LimitPolicyNames.ValueType  # 1
        MINUTELY_ROLLING: LimitResponse._LimitPolicyNames.ValueType  # 3
        HOURLY_ROLLING: LimitResponse._LimitPolicyNames.ValueType  # 5
        DAILY_ROLLING: LimitResponse._LimitPolicyNames.ValueType  # 7
        MONTHLY_ROLLING: LimitResponse._LimitPolicyNames.ValueType  # 8
        INFINITE: LimitResponse._LimitPolicyNames.ValueType  # 9
        YEARLY_ROLLING: LimitResponse._LimitPolicyNames.ValueType  # 10

    class LimitPolicyNames(_LimitPolicyNames, metaclass=_LimitPolicyNamesEnumTypeWrapper): ...
    NOT_SET: LimitResponse.LimitPolicyNames.ValueType  # 0
    SECONDLY_ROLLING: LimitResponse.LimitPolicyNames.ValueType  # 1
    MINUTELY_ROLLING: LimitResponse.LimitPolicyNames.ValueType  # 3
    HOURLY_ROLLING: LimitResponse.LimitPolicyNames.ValueType  # 5
    DAILY_ROLLING: LimitResponse.LimitPolicyNames.ValueType  # 7
    MONTHLY_ROLLING: LimitResponse.LimitPolicyNames.ValueType  # 8
    INFINITE: LimitResponse.LimitPolicyNames.ValueType  # 9
    YEARLY_ROLLING: LimitResponse.LimitPolicyNames.ValueType  # 10

    PASSED_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    ENFORCED_GROUP_FIELD_NUMBER: builtins.int
    CURRENT_BUCKET_FIELD_NUMBER: builtins.int
    POLICY_GROUP_FIELD_NUMBER: builtins.int
    POLICY_NAME_FIELD_NUMBER: builtins.int
    POLICY_LIMIT_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    LIMIT_RESET_AT_FIELD_NUMBER: builtins.int
    SAFETY_LEVEL_FIELD_NUMBER: builtins.int
    passed: builtins.bool
    expires_at: builtins.int
    """for returnable: rtn this value"""
    enforced_group: builtins.str
    """events:pageview:homepage:123123"""
    current_bucket: builtins.int
    policy_group: builtins.str
    """events:pageview"""
    policy_name: global___LimitResponse.LimitPolicyNames.ValueType
    policy_limit: builtins.int
    amount: builtins.int
    limit_reset_at: builtins.int
    safety_level: global___LimitDefinition.SafetyLevel.ValueType
    def __init__(
        self,
        *,
        passed: builtins.bool = ...,
        expires_at: builtins.int = ...,
        enforced_group: builtins.str = ...,
        current_bucket: builtins.int = ...,
        policy_group: builtins.str = ...,
        policy_name: global___LimitResponse.LimitPolicyNames.ValueType = ...,
        policy_limit: builtins.int = ...,
        amount: builtins.int = ...,
        limit_reset_at: builtins.int = ...,
        safety_level: global___LimitDefinition.SafetyLevel.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "current_bucket", b"current_bucket", "enforced_group", b"enforced_group", "expires_at", b"expires_at", "limit_reset_at", b"limit_reset_at", "passed", b"passed", "policy_group", b"policy_group", "policy_limit", b"policy_limit", "policy_name", b"policy_name", "safety_level", b"safety_level"]) -> None: ...

global___LimitResponse = LimitResponse

@typing_extensions.final
class LimitRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _LimitCombiner:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _LimitCombinerEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LimitRequest._LimitCombiner.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NOT_SET: LimitRequest._LimitCombiner.ValueType  # 0
        MINIMUM: LimitRequest._LimitCombiner.ValueType  # 1
        MAXIMUM: LimitRequest._LimitCombiner.ValueType  # 2

    class LimitCombiner(_LimitCombiner, metaclass=_LimitCombinerEnumTypeWrapper): ...
    NOT_SET: LimitRequest.LimitCombiner.ValueType  # 0
    MINIMUM: LimitRequest.LimitCombiner.ValueType  # 1
    MAXIMUM: LimitRequest.LimitCombiner.ValueType  # 2

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    ACQUIRE_AMOUNT_FIELD_NUMBER: builtins.int
    GROUPS_FIELD_NUMBER: builtins.int
    LIMIT_COMBINER_FIELD_NUMBER: builtins.int
    ALLOW_PARTIAL_RESPONSE_FIELD_NUMBER: builtins.int
    SAFETY_LEVEL_FIELD_NUMBER: builtins.int
    account_id: builtins.int
    acquire_amount: builtins.int
    @property
    def groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    limit_combiner: global___LimitRequest.LimitCombiner.ValueType
    allow_partial_response: builtins.bool
    safety_level: global___LimitDefinition.SafetyLevel.ValueType
    """[default = L4_BEST_EFFORT];"""
    def __init__(
        self,
        *,
        account_id: builtins.int = ...,
        acquire_amount: builtins.int = ...,
        groups: collections.abc.Iterable[builtins.str] | None = ...,
        limit_combiner: global___LimitRequest.LimitCombiner.ValueType = ...,
        allow_partial_response: builtins.bool = ...,
        safety_level: global___LimitDefinition.SafetyLevel.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_id", b"account_id", "acquire_amount", b"acquire_amount", "allow_partial_response", b"allow_partial_response", "groups", b"groups", "limit_combiner", b"limit_combiner", "safety_level", b"safety_level"]) -> None: ...

global___LimitRequest = LimitRequest

@typing_extensions.final
class ContextSet(google.protobuf.message.Message):
    """if the same Context type exists, last one wins"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONTEXTS_FIELD_NUMBER: builtins.int
    @property
    def contexts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Context]: ...
    def __init__(
        self,
        *,
        contexts: collections.abc.Iterable[global___Context] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["contexts", b"contexts"]) -> None: ...

global___ContextSet = ContextSet

@typing_extensions.final
class Context(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ConfigValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ConfigValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    type: builtins.str
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ConfigValue]: ...
    def __init__(
        self,
        *,
        type: builtins.str | None = ...,
        values: collections.abc.Mapping[builtins.str, global___ConfigValue] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_type", b"_type", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_type", b"_type", "type", b"type", "values", b"values"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type", b"_type"]) -> typing_extensions.Literal["type"] | None: ...

global___Context = Context

@typing_extensions.final
class Identity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    LOOKUP_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    lookup: builtins.str
    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        lookup: builtins.str | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_lookup", b"_lookup", "lookup", b"lookup"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_lookup", b"_lookup", "attributes", b"attributes", "lookup", b"lookup"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_lookup", b"_lookup"]) -> typing_extensions.Literal["lookup"] | None: ...

global___Identity = Identity

@typing_extensions.final
class ClientConfigValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INT_FIELD_NUMBER: builtins.int
    STRING_FIELD_NUMBER: builtins.int
    DOUBLE_FIELD_NUMBER: builtins.int
    BOOL_FIELD_NUMBER: builtins.int
    int: builtins.int
    string: builtins.str
    double: builtins.float
    bool: builtins.bool
    def __init__(
        self,
        *,
        int: builtins.int | None = ...,
        string: builtins.str | None = ...,
        double: builtins.float | None = ...,
        bool: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_bool", b"_bool", "_double", b"_double", "_int", b"_int", "_string", b"_string", "bool", b"bool", "double", b"double", "int", b"int", "string", b"string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_bool", b"_bool", "_double", b"_double", "_int", b"_int", "_string", b"_string", "bool", b"bool", "double", b"double", "int", b"int", "string", b"string"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bool", b"_bool"]) -> typing_extensions.Literal["bool"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_double", b"_double"]) -> typing_extensions.Literal["double"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_int", b"_int"]) -> typing_extensions.Literal["int"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_string", b"_string"]) -> typing_extensions.Literal["string"] | None: ...

global___ClientConfigValue = ClientConfigValue

@typing_extensions.final
class ConfigEvaluations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ClientConfigValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ClientConfigValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ClientConfigValue]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Mapping[builtins.str, global___ClientConfigValue] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values", b"values"]) -> None: ...

global___ConfigEvaluations = ConfigEvaluations

@typing_extensions.final
class LimitDefinition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _SafetyLevel:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _SafetyLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LimitDefinition._SafetyLevel.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NOT_SET: LimitDefinition._SafetyLevel.ValueType  # 0
        L4_BEST_EFFORT: LimitDefinition._SafetyLevel.ValueType  # 4
        L5_BOMBPROOF: LimitDefinition._SafetyLevel.ValueType  # 5

    class SafetyLevel(_SafetyLevel, metaclass=_SafetyLevelEnumTypeWrapper): ...
    NOT_SET: LimitDefinition.SafetyLevel.ValueType  # 0
    L4_BEST_EFFORT: LimitDefinition.SafetyLevel.ValueType  # 4
    L5_BOMBPROOF: LimitDefinition.SafetyLevel.ValueType  # 5

    POLICY_NAME_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    BURST_FIELD_NUMBER: builtins.int
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_FIELD_NUMBER: builtins.int
    RETURNABLE_FIELD_NUMBER: builtins.int
    SAFETY_LEVEL_FIELD_NUMBER: builtins.int
    policy_name: global___LimitResponse.LimitPolicyNames.ValueType
    limit: builtins.int
    burst: builtins.int
    account_id: builtins.int
    last_modified: builtins.int
    returnable: builtins.bool
    safety_level: global___LimitDefinition.SafetyLevel.ValueType
    """[default = L4_BEST_EFFORT]; // Overridable by request"""
    def __init__(
        self,
        *,
        policy_name: global___LimitResponse.LimitPolicyNames.ValueType = ...,
        limit: builtins.int = ...,
        burst: builtins.int = ...,
        account_id: builtins.int = ...,
        last_modified: builtins.int = ...,
        returnable: builtins.bool = ...,
        safety_level: global___LimitDefinition.SafetyLevel.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_id", b"account_id", "burst", b"burst", "last_modified", b"last_modified", "limit", b"limit", "policy_name", b"policy_name", "returnable", b"returnable", "safety_level", b"safety_level"]) -> None: ...

global___LimitDefinition = LimitDefinition

@typing_extensions.final
class LimitDefinitions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEFINITIONS_FIELD_NUMBER: builtins.int
    @property
    def definitions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LimitDefinition]: ...
    def __init__(
        self,
        *,
        definitions: collections.abc.Iterable[global___LimitDefinition] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["definitions", b"definitions"]) -> None: ...

global___LimitDefinitions = LimitDefinitions

@typing_extensions.final
class BufferedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    METHOD_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    LIMIT_GROUPS_FIELD_NUMBER: builtins.int
    CONTENT_TYPE_FIELD_NUMBER: builtins.int
    FIFO_FIELD_NUMBER: builtins.int
    account_id: builtins.int
    method: builtins.str
    uri: builtins.str
    body: builtins.str
    @property
    def limit_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    content_type: builtins.str
    fifo: builtins.bool
    def __init__(
        self,
        *,
        account_id: builtins.int = ...,
        method: builtins.str = ...,
        uri: builtins.str = ...,
        body: builtins.str = ...,
        limit_groups: collections.abc.Iterable[builtins.str] | None = ...,
        content_type: builtins.str = ...,
        fifo: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_id", b"account_id", "body", b"body", "content_type", b"content_type", "fifo", b"fifo", "limit_groups", b"limit_groups", "method", b"method", "uri", b"uri"]) -> None: ...

global___BufferedRequest = BufferedRequest

@typing_extensions.final
class BatchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    METHOD_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    LIMIT_GROUPS_FIELD_NUMBER: builtins.int
    BATCH_TEMPLATE_FIELD_NUMBER: builtins.int
    BATCH_SEPARATOR_FIELD_NUMBER: builtins.int
    account_id: builtins.int
    method: builtins.str
    uri: builtins.str
    body: builtins.str
    @property
    def limit_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    batch_template: builtins.str
    batch_separator: builtins.str
    def __init__(
        self,
        *,
        account_id: builtins.int = ...,
        method: builtins.str = ...,
        uri: builtins.str = ...,
        body: builtins.str = ...,
        limit_groups: collections.abc.Iterable[builtins.str] | None = ...,
        batch_template: builtins.str = ...,
        batch_separator: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_id", b"account_id", "batch_separator", b"batch_separator", "batch_template", b"batch_template", "body", b"body", "limit_groups", b"limit_groups", "method", b"method", "uri", b"uri"]) -> None: ...

global___BatchRequest = BatchRequest

@typing_extensions.final
class BasicResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    message: builtins.str
    def __init__(
        self,
        *,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message"]) -> None: ...

global___BasicResponse = BasicResponse

@typing_extensions.final
class CreationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    NEW_ID_FIELD_NUMBER: builtins.int
    message: builtins.str
    new_id: builtins.int
    def __init__(
        self,
        *,
        message: builtins.str = ...,
        new_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message", "new_id", b"new_id"]) -> None: ...

global___CreationResponse = CreationResponse

@typing_extensions.final
class IdBlock(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    PROJECT_ENV_ID_FIELD_NUMBER: builtins.int
    SEQUENCE_NAME_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    project_id: builtins.int
    project_env_id: builtins.int
    sequence_name: builtins.str
    start: builtins.int
    end: builtins.int
    def __init__(
        self,
        *,
        project_id: builtins.int = ...,
        project_env_id: builtins.int = ...,
        sequence_name: builtins.str = ...,
        start: builtins.int = ...,
        end: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "project_env_id", b"project_env_id", "project_id", b"project_id", "sequence_name", b"sequence_name", "start", b"start"]) -> None: ...

global___IdBlock = IdBlock

@typing_extensions.final
class IdBlockRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    PROJECT_ENV_ID_FIELD_NUMBER: builtins.int
    SEQUENCE_NAME_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    project_id: builtins.int
    project_env_id: builtins.int
    sequence_name: builtins.str
    size: builtins.int
    def __init__(
        self,
        *,
        project_id: builtins.int = ...,
        project_env_id: builtins.int = ...,
        sequence_name: builtins.str = ...,
        size: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_env_id", b"project_env_id", "project_id", b"project_id", "sequence_name", b"sequence_name", "size", b"size"]) -> None: ...

global___IdBlockRequest = IdBlockRequest

@typing_extensions.final
class ContextShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class FieldTypesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    FIELD_TYPES_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def field_types(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        field_types: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field_types", b"field_types", "name", b"name"]) -> None: ...

global___ContextShape = ContextShape

@typing_extensions.final
class ContextShapes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPES_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    @property
    def shapes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContextShape]: ...
    namespace: builtins.str
    def __init__(
        self,
        *,
        shapes: collections.abc.Iterable[global___ContextShape] | None = ...,
        namespace: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_namespace", b"_namespace", "namespace", b"namespace"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_namespace", b"_namespace", "namespace", b"namespace", "shapes", b"shapes"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_namespace", b"_namespace"]) -> typing_extensions.Literal["namespace"] | None: ...

global___ContextShapes = ContextShapes

@typing_extensions.final
class EvaluatedKeys(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    namespace: builtins.str
    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[builtins.str] | None = ...,
        namespace: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_namespace", b"_namespace", "namespace", b"namespace"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_namespace", b"_namespace", "keys", b"keys", "namespace", b"namespace"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_namespace", b"_namespace"]) -> typing_extensions.Literal["namespace"] | None: ...

global___EvaluatedKeys = EvaluatedKeys
