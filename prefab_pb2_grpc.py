# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import prefab_pb2 as prefab__pb2


class RateLimitServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LimitCheck = channel.unary_unary(
                '/prefab.RateLimitService/LimitCheck',
                request_serializer=prefab__pb2.LimitRequest.SerializeToString,
                response_deserializer=prefab__pb2.LimitResponse.FromString,
                )


class RateLimitServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LimitCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RateLimitServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LimitCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.LimitCheck,
                    request_deserializer=prefab__pb2.LimitRequest.FromString,
                    response_serializer=prefab__pb2.LimitResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'prefab.RateLimitService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RateLimitService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LimitCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prefab.RateLimitService/LimitCheck',
            prefab__pb2.LimitRequest.SerializeToString,
            prefab__pb2.LimitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ConfigServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConfig = channel.unary_stream(
                '/prefab.ConfigService/GetConfig',
                request_serializer=prefab__pb2.ConfigServicePointer.SerializeToString,
                response_deserializer=prefab__pb2.Configs.FromString,
                )
        self.GetAllConfig = channel.unary_unary(
                '/prefab.ConfigService/GetAllConfig',
                request_serializer=prefab__pb2.ConfigServicePointer.SerializeToString,
                response_deserializer=prefab__pb2.Configs.FromString,
                )
        self.Upsert = channel.unary_unary(
                '/prefab.ConfigService/Upsert',
                request_serializer=prefab__pb2.Config.SerializeToString,
                response_deserializer=prefab__pb2.CreationResponse.FromString,
                )


class ConfigServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Upsert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConfig': grpc.unary_stream_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=prefab__pb2.ConfigServicePointer.FromString,
                    response_serializer=prefab__pb2.Configs.SerializeToString,
            ),
            'GetAllConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllConfig,
                    request_deserializer=prefab__pb2.ConfigServicePointer.FromString,
                    response_serializer=prefab__pb2.Configs.SerializeToString,
            ),
            'Upsert': grpc.unary_unary_rpc_method_handler(
                    servicer.Upsert,
                    request_deserializer=prefab__pb2.Config.FromString,
                    response_serializer=prefab__pb2.CreationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'prefab.ConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConfigService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/prefab.ConfigService/GetConfig',
            prefab__pb2.ConfigServicePointer.SerializeToString,
            prefab__pb2.Configs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prefab.ConfigService/GetAllConfig',
            prefab__pb2.ConfigServicePointer.SerializeToString,
            prefab__pb2.Configs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Upsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prefab.ConfigService/Upsert',
            prefab__pb2.Config.SerializeToString,
            prefab__pb2.CreationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class IdServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBlock = channel.unary_unary(
                '/prefab.IdService/GetBlock',
                request_serializer=prefab__pb2.IdBlockRequest.SerializeToString,
                response_deserializer=prefab__pb2.IdBlock.FromString,
                )


class IdServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlock,
                    request_deserializer=prefab__pb2.IdBlockRequest.FromString,
                    response_serializer=prefab__pb2.IdBlock.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'prefab.IdService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IdService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prefab.IdService/GetBlock',
            prefab__pb2.IdBlockRequest.SerializeToString,
            prefab__pb2.IdBlock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ClientServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAll = channel.unary_unary(
                '/prefab.ClientService/GetAll',
                request_serializer=prefab__pb2.Identity.SerializeToString,
                response_deserializer=prefab__pb2.ConfigEvaluations.FromString,
                )


class ClientServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAll': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=prefab__pb2.Identity.FromString,
                    response_serializer=prefab__pb2.ConfigEvaluations.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'prefab.ClientService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prefab.ClientService/GetAll',
            prefab__pb2.Identity.SerializeToString,
            prefab__pb2.ConfigEvaluations.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
